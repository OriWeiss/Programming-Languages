Grammar

    0 $accept: program $end

    1 program: s_expr EOL

    2 s_expr: NUMBER
    3       | f_expr

    4 f_expr: LPAREN FUNC s_expr RPAREN
    5       | LPAREN FUNC s_expr s_expr RPAREN
    6       | QUIT


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNC (258) 4 5
NUMBER (259) 2
LPAREN (260) 4 5
RPAREN (261) 4 5
EOL (262) 1
QUIT (263) 6


Nonterminals, with rules where they appear

$accept (9)
    on left: 0
program (10)
    on left: 1, on right: 0
s_expr (11)
    on left: 2 3, on right: 1 4 5
f_expr (12)
    on left: 4 5 6, on right: 3


State 0

    0 $accept: . program $end

    NUMBER  shift, and go to state 1
    LPAREN  shift, and go to state 2
    QUIT    shift, and go to state 3

    program  go to state 4
    s_expr   go to state 5
    f_expr   go to state 6


State 1

    2 s_expr: NUMBER .

    $default  reduce using rule 2 (s_expr)


State 2

    4 f_expr: LPAREN . FUNC s_expr RPAREN
    5       | LPAREN . FUNC s_expr s_expr RPAREN

    FUNC  shift, and go to state 7


State 3

    6 f_expr: QUIT .

    $default  reduce using rule 6 (f_expr)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 8


State 5

    1 program: s_expr . EOL

    EOL  shift, and go to state 9


State 6

    3 s_expr: f_expr .

    $default  reduce using rule 3 (s_expr)


State 7

    4 f_expr: LPAREN FUNC . s_expr RPAREN
    5       | LPAREN FUNC . s_expr s_expr RPAREN

    NUMBER  shift, and go to state 1
    LPAREN  shift, and go to state 2
    QUIT    shift, and go to state 3

    s_expr  go to state 10
    f_expr  go to state 6


State 8

    0 $accept: program $end .

    $default  accept


State 9

    1 program: s_expr EOL .

    $default  reduce using rule 1 (program)


State 10

    4 f_expr: LPAREN FUNC s_expr . RPAREN
    5       | LPAREN FUNC s_expr . s_expr RPAREN

    NUMBER  shift, and go to state 1
    LPAREN  shift, and go to state 2
    RPAREN  shift, and go to state 11
    QUIT    shift, and go to state 3

    s_expr  go to state 12
    f_expr  go to state 6


State 11

    4 f_expr: LPAREN FUNC s_expr RPAREN .

    $default  reduce using rule 4 (f_expr)


State 12

    5 f_expr: LPAREN FUNC s_expr s_expr . RPAREN

    RPAREN  shift, and go to state 13


State 13

    5 f_expr: LPAREN FUNC s_expr s_expr RPAREN .

    $default  reduce using rule 5 (f_expr)
